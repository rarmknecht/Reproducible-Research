install.packages("kernsmooth")
install.packages("KernSmooth")
library("KernSmooth")
library("kernsmooth"
)
library()
install.packages("KernSmooth")
library("KernSmooth")
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
date("2014-09-08 14:57")
as.date("2014-09-08 14:57")
as.POSIXct("2014-09-08 14:57")
as.POSIXlt("2014-09-08 14:57")
as.POSIXct("2014-09-08 14:57")
as.POSIXct("2014-09-05 13:40")
start <- as.POSIXct("2014-09-05 13:40")
finish <- as.POSIXct("2014-09-08 14:57")
finish - start
as.POSIXct(finish - start)
as.POSIXlt(finish - start)
3.0534472 * (60*24)
cube <- function(x, n) {
x^3
}
cude(3)
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
set.seed(1)
rpois(5,2)
summaryRprof
?summaryRprof
?system.time
library('httr')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "2c73c964ea87ebb7dddd", "92c1fb2d788551e4f300f12ffdc2207336ab23df")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
install.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
ret <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(ret)
content(ret)
raw <- content(ret)
raw
raw[[1]]
raw[[1]]$name
raw[[1:30]]$name
raw[[:]]$name
raw$name
raw[]$name
raw[1]$name
raw[[1]]$name
raw[[2]]$name
raw[[3]]$name
raw[[4]]$name
raw[[5]]$name
raw[[5]]$created_at
install.packages('sqldf')
download.url('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv','acs.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv','acs.csv')
acs <- read.csv('acs.csv')
sqldf('select * from acs')
library(sqldf)
sqldf('select * from acs')
sqldf('select pwgtp1 from acs where AGEP < 50')
ans <- sqldf('select pwgtp1 from acs where AGEP < 50')
summary(ans)
unique(acs$AGEP)
sqldf('select distinct AGEP from acs')
sqldf('select distinct AGEP from acs')
web4 <- GET("http://biostat.jhsph.edu/~jleek/contact.html ")
web4
content(web4)
raw_web <- content(web4)
type(raw_web)
dir(raw_wbe)
dir(raw_web)
ls(raw_web)
ls
dir
raw_web
raw_web[10]
strsplit(raw_web,'\n')
strsplit(raw_web,"\n")
dfweb <- data.frame(raw_web)
nweb <- read.table(raw_web)
nweb <- readLines(raw_web)
nweb <- readLines(" http://biostat.jhsph.edu/~jleek/contact.html ")
nweb <- readLines("http://biostat.jhsph.edu/~jleek/contact.html")
nweb[1]
nweb[2]
nweb[10]
nchar(nweb[10])
nchar(nweb[20])
nchar(nweb[30])
nchar(nweb[100])
raw5 <- readLines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
raw5[1]
raw5[2]
raw5[3]
raw5[4]
raw5[5]
fwf5 <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
fwf5 <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",c(10,5,4,4,5,4,4,5,4,4,5,4,4))
fwf5
head(fwf5)
fwf5$V6
fwf5 <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",c(10,5,4,4,5,4,4,5,4,4,5,4,4),skip=4)
head(fwf5)
fwf5$V6
sum(fwf5$V6)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv','w3q1.csv')
raw = read.csv('w3q1.csv')
summary(raw)
raw[which(raw$ACF=3)]
raw[which(raw$ACF==3)]
raw[which(raw$ACF==3),]
raw[which(raw$ACR==3),]
summary(raw[which(raw$ACR==3),])
str(raw[which(raw$ACR==3),])
str(raw[which(raw$ACR==3 && raw$AGS==6),])
str(raw[which(raw$ACR==3 & raw$AGS==6),])
raw[raw$ACR==3 & raw$AGS==6]
raw[raw$ACR==3 & raw$AGS==6,]
raw$ACR==3 & raw$AGS==6
aglog <- raw$ACR==3 & raw$AGS==6
raw[which(aglog)]
raw[which(aglog),]
head(raw[which(aglog),raw$wgtp67])
head(raw[which(aglog),1])
head(raw[which(aglog),2])
head(raw[which(aglog),])
jpeg?
df
?jpeg
jpeg('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg')
library(jpeg)
install.packages('jpeg')
library(jpeg)
?jpeg
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg','w3q2.jpg')
raw <- readJPEG('w3q2.jpg',native=TRUE)
?quantile
quantile(raw)
quantile(raw, seq(30,80))
quantile(raw, 30,80
)
quantile(raw, c(30,80))
quantile(raw, seq(.3,.8)
)
quantile(raw, seq(.3,.8))
quantile(raw, seq(.3,.8,.9))
quantile(raw, c(.3,.8))
img <- readJPEG(system.file("img", "Rlogo.jpg", package="jpeg"), TRUE)
quantile(img, c(.3,.8))
str(img)
quantile(img$nativeRaster, c(.3,.8))
quantile(img$nativeRaster, probs=c(.3,.8))
quantile(img, probs=c(.3,.8))
img <- readJPEG(system.file("img", "w3q2.jpg", package="jpeg"), TRUE)
img <- readJPEG("w3q2.jpg", TRUE)
quantile(img, probs=c(.3,.8))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg','w3q2.jpg',mode="wb")
img <- readJPEG("w3q2.jpg", TRUE)
quantile(img, probs=c(.3,.8))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv','gdp.csv')
gdp <- read.csv('gdp.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv','edu.csv')
edu <- read.csv('edu.csv')
str(edu)
str(gdp)
name(gdp$X)
name
names
names(gdp)
names(gdp) <- c('CountryCode','GDP')
names(gdp)
names(gdp) <- c('CountryCode','GDP', 'X.1','x.2','x.3','x.4','x.5','x.6','x.7','x.8')
names(gdp)
head(gdp)
head(gdp[len(gdp$CountryCode)>0])
len(gdp$CountryCode)
length(gdp$CountryCode)
length(gdp$CountryCode)>0
gdp$CountryCode
gdp$CountryCode != ''
gdp[gdp$CountryCode != '']
gdp[which(gdp$CountryCode != '')]
gdp[which(gdp$CountryCode != ''),]
clean_gdp <- gdp[which(gdp$CountryCode != ''),]
edu
str(edu)
edu[,1]
join(edu,clean_gdp,CountryCode)
library(plyr)
join(edu,clean_gdp,CountryCode)
join(edu,clean_gdp,'CountryCode')
join(clean_gdp,edu,'CountryCode')
join(clean_gdp,edu,'CountryCode')[,1:2]
tmp <- join(clean_gdp,edu,'CountryCode')[,1:2]
tmp
tmp[tmp$GDP>0]
tmp$GDP>0
tmp$GDP > 0
str(tmp)
tmp$GDP != ''
tmp[which(tmp$GDP != '')]
tmp[which(tmp$GDP != ''),]
sort(tmp[which(tmp$GDP != ''),])
?sort
tmp[which(tmp$GDP != '')
tmp[which(tmp$GDP != ''),]
tmp[which(tmp$GDP != ''),]
order(tmp[which(tmp$GDP != ''),]$GDP)
tmp[which(tmp$GDP != ''),]
t2 <- tmp[which(tmp$GDP != ''),]
t2[order(t2$GDP)]
t2[order(t2$GDP),]
t2
t2$GDP <- as.numeric(as.character(t2$GDP))
str(t2)
t2[order(t2$GDP),]
t2[order(t2$GDP,desc),]
?order
t2[order(t2$GDP,TRUE),]
t2[order(t2$GDP,decreasing=TRUE),]
t2[order(t2$GDP,decreasing=TRUE),][13,]
edu
edu[edu$CountryCode = "KNA"]
edu[edu$CountryCode = "KNA",]
edu[edu$CountryCode=="KNA"]
edu[edu$CountryCode=="KNA",]
summary(edu)
install.packages(c("boot", "car", "class", "cluster", "codetools", "httpuv", "jsonlite", "KernSmooth", "labeling", "maps", "MASS", "mgcv", "nlme", "Rcpp", "RSQLite", "sqldf", "testthat"))
library(data.table)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "2c73c964ea87ebb7dddd", "92c1fb2d788551e4f300f12ffdc2207336ab23df")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req
head(content(req))
tbl_df(req)
library(dplyr)
tbl_df(req)
tbl_df(content(req))
req$name
req[1:30]$name
content(req)$name
content(req)[[1:30]]$name
content(req)[[1:30]]
content(req)[[1]]
content(req)[[1]]$name
sapply(content(req), name)
sapply(content(req), $name)
lapply(content(req), $name)
lapply(content(req), "[", c("name"))
tbl_df(lapply(content(req), "[", c("name")))
lapply(content(req), "[", c("name"))
names <- lapply(content(req), "[", c("name"))
as_data_frame(names)
vals <- lapply(content(req), "[", c("name"))
names(vals) <- c("repoName")
as_data_frame(vals)
content(req)[[5]]
install.packages("sqldf")
library(sqldf)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "quiz2_data2.csv")
acs <- read.csv("quiz2_data2.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[10], htmlCode[20])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "quiz2_data5.fxf")
raw <- read.fxf("quiz2_data5.fxf", skip=4, widths=c(9,5,4,4,5,4,4,5,4,4,5,4,4))
raw <- read.fwf("quiz2_data5.fxf", skip=4, widths=c(9,5,4,4,5,4,4,5,4,4,5,4,4))
raw <- read.fwf("quiz2_data5.fxf", skip=4, widths=c(9,9,4,9,4,9,4,9,4))
tbl_df(raw)
raw <- read.fwf("quiz2_data5.fxf", skip=4, widths=c(9,5,4,4,5,4,4,5,4,4,5,4,4))
tbl_df(raw)
raw <- read.fwf("quiz2_data5.fxf", skip=4, widths=c(9,9,4,9,4,9,4,9,4), colClasses=c("character", "numeric",
"numeric","numeric",
"numeric","numeric",
"numeric","numeric",
"numeric"))
raw <- read.fwf("quiz2_data5.fxf", skip=4, widths=c(10,9,4,9,4,9,4,9,4), colClasses=c("character", "numeric",
"numeric","numeric",
"numeric","numeric",
"numeric","numeric",
"numeric"))
tbl_df(raw)
tbl_df(raw) %>% select(V4)
tbl_df(raw) %>% select(V4) %>% sum
setwd("C:/Users/ranarm01/Documents/Github/Coursera-ReproduciableResearch")
p.mf = 0.17
# P(F) = 0.12
p.f = 0.12
# P(M Intersect F) = 0.06
p.both = 0.06
# P(M Union F) = P(F) + P(M) - P(M Intersect F)
#   p.mf = p.f + p.m - p.both
p.m <- p.mf + p.both - p.f
p.m
0.75
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp$X)
aggregate(X * Prob, temp, FUN=median)
aggregate(x * Prob, temp, FUN=median)
temp[1,1]
(1.0 * 0.1) + (2.0*0.2) + (3.0 * 0.3) + (4.0 * 0.4)
expected <- (1.0 * 0.1) + (2.0*0.2) + (3.0 * 0.3) + (4.0 * 0.4)
expected
